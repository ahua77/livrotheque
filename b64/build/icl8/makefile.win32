################################################################################
# File:		makefile.win32
#
# Purpose:	Makefile for the b64 project, for the Intel C/C++ 8
#           compiler, on Win32
#
# Created:	15th Feburary 2005
# Updated:	15th March 2008
#
################################################################################


################################################################################
# Environment check
#

!ifndef STLSOFT_INCLUDE
!error STLSOFT_INCLUDE must be defined
!endif # STLSOFT_INCLUDE

################################################################################
# Symbols

# Identification

COMP_TAG			=	icl8
PROJ_TAG			=	b64
PROJ_VER_MAJOR		=	1
PROJ_TAG_VER		=	$(PROJ_TAG).$(PROJ_VER_MAJOR)

CC					=	icl
CPPC				=	icl
AR					=	xilib
LD					=	xilink
RM					=	del /f
CP					=	copy

# Directories

PROJ_BASE_DIR		=	..\..
PROJ_BIN_DIR		=	$(PROJ_BASE_DIR)\bin
PROJ_INCLUDE_DIR	=	$(PROJ_BASE_DIR)\include
PROJ_LIB_DIR		=	$(PROJ_BASE_DIR)\lib
PROJ_OBJ_DIR		=	.
PROJ_SRC_DIR		=	$(PROJ_BASE_DIR)\src
PROJ_EXAMPLES_DIR	=	$(PROJ_BASE_DIR)\examples
PROJ_SAMPLES_DIR	=	$(PROJ_BASE_DIR)\samples
PROJ_TEST_DIR		=	$(PROJ_BASE_DIR)\test

# Includes

INCLUDES_LEADER		=	

PROJ_INCLUDE			=	-I$(PROJ_INCLUDE_DIR)

COMMON_INCLUDES		=	

CC_INCLUDES = \
 $(INCLUDES_LEADER) \
 $(PROJ_INCLUDE) \
 $(COMMON_INCLUDES)

CPPC_INCLUDES = \
 $(INCLUDES_LEADER) \
 $(PROJ_INCLUDE) \
 $(COMMON_INCLUDES) \
 -I"$(STLSOFT_INCLUDE)" \
 \

# Lib

LIBS_LEADER			=	

COMMON_LIB			=	

# #defines

COMMON_DEFS			=	-DWIN32

CC_DEFS				=	$(COMMON_DEFS)

CPPC_DEFS			=	$(COMMON_DEFS)

# Flags

CC_F_NOLOGO				=	-nologo
CC_F_COMPILE_ONLY		=	-c
CC_F_WARNING_MAX		=	-W4
CC_F_WARNING_ERR		=	-WX

CPPC_F_NOLOGO		=	-nologo
CPPC_F_COMPILE_ONLY	=	-c
CPPC_F_WARNING_MAX	=	-W4
CPPC_F_WARNING_ERR	=	-WX
CPPC_F_EXCEPTIONS	=	-GX
CPPC_F_RTTI			=	-GR

CC_TOOL_FLAGS		=	

CC_FLAGS = \
 $(CC_TOOL_FLAGS) \
 $(CC_F_NOLOGO) \
 $(CC_F_COMPILE_ONLY) \
 $(CC_F_WARNING_MAX) \
 $(CC_F_WARNING_ERR)

CPPC_TOOL_FLAGS		=	

CPPC_FLAGS = \
 $(CPPC_TOOL_FLAGS) \
 $(CPPC_F_NOLOGO) \
 $(CPPC_F_COMPILE_ONLY) \
 $(CPPC_F_WARNING_MAX) \
 $(CPPC_F_WARNING_ERR) \
 $(CPPC_F_EXCEPTIONS) \
 $(CPPC_F_RTTI)

# Arguments (= flags + defines + includes)

CC_ARGS_MT_DEBUG				=	-MTd -D_DEBUG $(CC_FLAGS) $(CC_DEFS) $(CC_INCLUDES)
CC_ARGS_DLL_DEBUG				=	-MDd -D_DEBUG $(CC_FLAGS) $(CC_DEFS) $(CC_INCLUDES)
CC_ARGS_DLL_RELEASE				=	-MD -DNDEBUG $(CC_FLAGS) $(CC_DEFS) $(CC_INCLUDES)
CC_ARGS_MT_RELEASE				=	-MT -DNDEBUG $(CC_FLAGS) $(CC_DEFS) $(CC_INCLUDES)
CC_ARGS_ST_DEBUG				=	-MLd -D_DEBUG $(CC_FLAGS) $(CC_DEFS) $(CC_INCLUDES)
CC_ARGS_ST_RELEASE				=	-ML -DNDEBUG $(CC_FLAGS) $(CC_DEFS) $(CC_INCLUDES)

CPPC_ARGS_MT_DEBUG			=	-MTd -D_DEBUG $(CPPC_FLAGS) $(CPPC_DEFS) $(CPPC_INCLUDES)
CPPC_ARGS_DLL_DEBUG			=	-MDd -D_DEBUG $(CPPC_FLAGS) $(CPPC_DEFS) $(CPPC_INCLUDES)
CPPC_ARGS_DLL_RELEASE			=	-MD -DNDEBUG $(CPPC_FLAGS) $(CPPC_DEFS) $(CPPC_INCLUDES)
CPPC_ARGS_MT_RELEASE			=	-MT -DNDEBUG $(CPPC_FLAGS) $(CPPC_DEFS) $(CPPC_INCLUDES)
CPPC_ARGS_ST_DEBUG			=	-MLd -D_DEBUG $(CPPC_FLAGS) $(CPPC_DEFS) $(CPPC_INCLUDES)
CPPC_ARGS_ST_RELEASE			=	-ML -DNDEBUG $(CPPC_FLAGS) $(CPPC_DEFS) $(CPPC_INCLUDES)

AR_ARGS				=	-nologo

LD_ARGS_MT_DEBUG				=	-nologo $(COMMON_LIB)
LD_ARGS_DLL_DEBUG				=	-nologo $(COMMON_LIB)
LD_ARGS_DLL_RELEASE				=	-nologo $(COMMON_LIB)
LD_ARGS_MT_RELEASE				=	-nologo $(COMMON_LIB)
LD_ARGS_ST_DEBUG				=	-nologo $(COMMON_LIB)
LD_ARGS_ST_RELEASE				=	-nologo $(COMMON_LIB)

################################################################################
# Targets

TARGET_LIB_MT_DEBUG			=	$(PROJ_LIB_DIR)\$(PROJ_TAG_VER).$(COMP_TAG).mt.debug.lib
TARGET_LIB_UN_MT_DEBUG		=	$(PROJ_LIB_DIR)\$(PROJ_TAG).$(COMP_TAG).mt.debug.lib
TARGET_LIB_DLL_DEBUG			=	$(PROJ_LIB_DIR)\$(PROJ_TAG_VER).$(COMP_TAG).dll.debug.lib
TARGET_LIB_UN_DLL_DEBUG		=	$(PROJ_LIB_DIR)\$(PROJ_TAG).$(COMP_TAG).dll.debug.lib
TARGET_LIB_DLL_RELEASE			=	$(PROJ_LIB_DIR)\$(PROJ_TAG_VER).$(COMP_TAG).dll.lib
TARGET_LIB_UN_DLL_RELEASE		=	$(PROJ_LIB_DIR)\$(PROJ_TAG).$(COMP_TAG).dll.lib
TARGET_LIB_MT_RELEASE			=	$(PROJ_LIB_DIR)\$(PROJ_TAG_VER).$(COMP_TAG).mt.lib
TARGET_LIB_UN_MT_RELEASE		=	$(PROJ_LIB_DIR)\$(PROJ_TAG).$(COMP_TAG).mt.lib
TARGET_LIB_ST_DEBUG			=	$(PROJ_LIB_DIR)\$(PROJ_TAG_VER).$(COMP_TAG).debug.lib
TARGET_LIB_UN_ST_DEBUG		=	$(PROJ_LIB_DIR)\$(PROJ_TAG).$(COMP_TAG).debug.lib
TARGET_LIB_ST_RELEASE			=	$(PROJ_LIB_DIR)\$(PROJ_TAG_VER).$(COMP_TAG).lib
TARGET_LIB_UN_ST_RELEASE		=	$(PROJ_LIB_DIR)\$(PROJ_TAG).$(COMP_TAG).lib

TARGET_TEST_C_1_MT_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).test.c.1.$(COMP_TAG).mt.debug.exe
TARGET_TEST_CPP_1_MT_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).test.cpp.1.$(COMP_TAG).mt.debug.exe
TARGET_TEST_C_1_DLL_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).test.c.1.$(COMP_TAG).dll.debug.exe
TARGET_TEST_CPP_1_DLL_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).test.cpp.1.$(COMP_TAG).dll.debug.exe
TARGET_TEST_C_1_DLL_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).test.c.1.$(COMP_TAG).dll.exe
TARGET_TEST_CPP_1_DLL_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).test.cpp.1.$(COMP_TAG).dll.exe
TARGET_TEST_C_1_MT_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).test.c.1.$(COMP_TAG).mt.exe
TARGET_TEST_CPP_1_MT_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).test.cpp.1.$(COMP_TAG).mt.exe
TARGET_TEST_C_1_ST_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).test.c.1.$(COMP_TAG).debug.exe
TARGET_TEST_CPP_1_ST_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).test.cpp.1.$(COMP_TAG).debug.exe
TARGET_TEST_C_1_ST_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).test.c.1.$(COMP_TAG).exe
TARGET_TEST_CPP_1_ST_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).test.cpp.1.$(COMP_TAG).exe

TARGET_EXAMPLE_C_1_MT_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.c.1.$(COMP_TAG).mt.debug.exe
TARGET_EXAMPLE_C_2_MT_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.c.1.$(COMP_TAG).mt.debug.exe
TARGET_EXAMPLE_CPP_1_MT_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.cpp.1.$(COMP_TAG).mt.debug.exe
TARGET_EXAMPLE_CPP_2_MT_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.cpp.1.$(COMP_TAG).mt.debug.exe
TARGET_EXAMPLE_C_1_DLL_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.c.1.$(COMP_TAG).dll.debug.exe
TARGET_EXAMPLE_C_2_DLL_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.c.1.$(COMP_TAG).dll.debug.exe
TARGET_EXAMPLE_CPP_1_DLL_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.cpp.1.$(COMP_TAG).dll.debug.exe
TARGET_EXAMPLE_CPP_2_DLL_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.cpp.1.$(COMP_TAG).dll.debug.exe
TARGET_EXAMPLE_C_1_DLL_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.c.1.$(COMP_TAG).dll.exe
TARGET_EXAMPLE_C_2_DLL_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.c.1.$(COMP_TAG).dll.exe
TARGET_EXAMPLE_CPP_1_DLL_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.cpp.1.$(COMP_TAG).dll.exe
TARGET_EXAMPLE_CPP_2_DLL_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.cpp.1.$(COMP_TAG).dll.exe
TARGET_EXAMPLE_C_1_MT_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.c.1.$(COMP_TAG).mt.exe
TARGET_EXAMPLE_C_2_MT_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.c.1.$(COMP_TAG).mt.exe
TARGET_EXAMPLE_CPP_1_MT_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.cpp.1.$(COMP_TAG).mt.exe
TARGET_EXAMPLE_CPP_2_MT_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.cpp.1.$(COMP_TAG).mt.exe
TARGET_EXAMPLE_C_1_ST_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.c.1.$(COMP_TAG).debug.exe
TARGET_EXAMPLE_C_2_ST_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.c.1.$(COMP_TAG).debug.exe
TARGET_EXAMPLE_CPP_1_ST_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.cpp.1.$(COMP_TAG).debug.exe
TARGET_EXAMPLE_CPP_2_ST_DEBUG		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.cpp.1.$(COMP_TAG).debug.exe
TARGET_EXAMPLE_C_1_ST_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.c.1.$(COMP_TAG).exe
TARGET_EXAMPLE_C_2_ST_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.c.1.$(COMP_TAG).exe
TARGET_EXAMPLE_CPP_1_ST_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.cpp.1.$(COMP_TAG).exe
TARGET_EXAMPLE_CPP_2_ST_RELEASE		=	$(PROJ_BIN_DIR)\$(PROJ_TAG_VER).example.cpp.1.$(COMP_TAG).exe

TARGETS = \
 $(TARGETS_LIB)\
 $(TARGETS_TEST)\
 $(TARGETS_EXAMPLES)\
 $(TARGETS_SAMPLES)\
 \

TARGETS_LIB =\
 $(TARGET_LIB_MT_DEBUG)\
 $(TARGET_LIB_UN_MT_DEBUG)\
 $(TARGET_LIB_DLL_DEBUG)\
 $(TARGET_LIB_UN_DLL_DEBUG)\
 $(TARGET_LIB_DLL_RELEASE)\
 $(TARGET_LIB_UN_DLL_RELEASE)\
 $(TARGET_LIB_MT_RELEASE)\
 $(TARGET_LIB_UN_MT_RELEASE)\
 $(TARGET_LIB_ST_DEBUG)\
 $(TARGET_LIB_UN_ST_DEBUG)\
 $(TARGET_LIB_ST_RELEASE)\
 $(TARGET_LIB_UN_ST_RELEASE)\
 \

TARGETS_TEST =\
 $(TARGET_TEST_C_1_MT_DEBUG)\
 $(TARGET_TEST_C_1_DLL_DEBUG)\
 $(TARGET_TEST_C_1_DLL_RELEASE)\
 $(TARGET_TEST_C_1_MT_RELEASE)\
 $(TARGET_TEST_C_1_ST_DEBUG)\
 $(TARGET_TEST_C_1_ST_RELEASE)\
 $(TARGET_TEST_CPP_1_MT_DEBUG) \
 $(TARGET_TEST_CPP_1_DLL_DEBUG) \
 $(TARGET_TEST_CPP_1_DLL_RELEASE) \
 $(TARGET_TEST_CPP_1_MT_RELEASE) \
 $(TARGET_TEST_CPP_1_ST_DEBUG) \
 $(TARGET_TEST_CPP_1_ST_RELEASE) \
 \

TARGETS_EXAMPLES =\
 $(TARGET_EXAMPLE_C_1_MT_DEBUG)\
 $(TARGET_EXAMPLE_C_2_MT_DEBUG)\
 $(TARGET_EXAMPLE_C_1_DLL_DEBUG)\
 $(TARGET_EXAMPLE_C_2_DLL_DEBUG)\
 $(TARGET_EXAMPLE_C_1_DLL_RELEASE)\
 $(TARGET_EXAMPLE_C_2_DLL_RELEASE)\
 $(TARGET_EXAMPLE_C_1_MT_RELEASE)\
 $(TARGET_EXAMPLE_C_2_MT_RELEASE)\
 $(TARGET_EXAMPLE_C_1_ST_DEBUG)\
 $(TARGET_EXAMPLE_C_2_ST_DEBUG)\
 $(TARGET_EXAMPLE_C_1_ST_RELEASE)\
 $(TARGET_EXAMPLE_C_2_ST_RELEASE)\
 $(TARGET_EXAMPLE_CPP_1_MT_DEBUG) \
 $(TARGET_EXAMPLE_CPP_2_MT_DEBUG) \
 $(TARGET_EXAMPLE_CPP_1_DLL_DEBUG) \
 $(TARGET_EXAMPLE_CPP_2_DLL_DEBUG) \
 $(TARGET_EXAMPLE_CPP_1_DLL_RELEASE) \
 $(TARGET_EXAMPLE_CPP_2_DLL_RELEASE) \
 $(TARGET_EXAMPLE_CPP_1_MT_RELEASE) \
 $(TARGET_EXAMPLE_CPP_2_MT_RELEASE) \
 $(TARGET_EXAMPLE_CPP_1_ST_DEBUG) \
 $(TARGET_EXAMPLE_CPP_2_ST_DEBUG) \
 $(TARGET_EXAMPLE_CPP_1_ST_RELEASE) \
 $(TARGET_EXAMPLE_CPP_2_ST_RELEASE) \
 \

OBJ_PROJ_MT_DEBUG				=	.\b64.mt.debug.obj
OBJ_PROJ_DLL_DEBUG				=	.\b64.dll.debug.obj
OBJ_PROJ_DLL_RELEASE				=	.\b64.dll.obj
OBJ_PROJ_MT_RELEASE				=	.\b64.mt.obj
OBJ_PROJ_ST_DEBUG				=	.\b64.debug.obj
OBJ_PROJ_ST_RELEASE				=	.\b64.obj

OBJ_TEST_C_1_MT_DEBUG					=	.\C.mt.debug.obj
OBJ_TEST_CPP_1_MT_DEBUG				=	.\Cpp.mt.debug.obj
OBJ_TEST_C_1_DLL_DEBUG					=	.\C.dll.debug.obj
OBJ_TEST_CPP_1_DLL_DEBUG				=	.\Cpp.dll.debug.obj
OBJ_TEST_C_1_DLL_RELEASE					=	.\C.dll.obj
OBJ_TEST_CPP_1_DLL_RELEASE				=	.\Cpp.dll.obj
OBJ_TEST_C_1_MT_RELEASE					=	.\C.mt.obj
OBJ_TEST_CPP_1_MT_RELEASE				=	.\Cpp.mt.obj
OBJ_TEST_C_1_ST_DEBUG					=	.\C.debug.obj
OBJ_TEST_CPP_1_ST_DEBUG				=	.\Cpp.debug.obj
OBJ_TEST_C_1_ST_RELEASE					=	.\C.obj
OBJ_TEST_CPP_1_ST_RELEASE				=	.\Cpp.obj

OBJS = \
 $(OBJ_PROJ_MT_DEBUG) \
 $(OBJ_PROJ_DLL_DEBUG) \
 $(OBJ_PROJ_DLL_RELEASE) \
 $(OBJ_PROJ_MT_RELEASE) \
 $(OBJ_PROJ_ST_DEBUG) \
 $(OBJ_PROJ_ST_RELEASE) \
 $(OBJ_TEST_C_1_MT_DEBUG) \
 $(OBJ_TEST_C_1_DLL_DEBUG) \
 $(OBJ_TEST_C_1_DLL_RELEASE) \
 $(OBJ_TEST_C_1_MT_RELEASE) \
 $(OBJ_TEST_C_1_ST_DEBUG) \
 $(OBJ_TEST_C_1_ST_RELEASE) \
 $(OBJ_TEST_CPP_1_MT_DEBUG) \
 $(OBJ_TEST_CPP_1_DLL_DEBUG) \
 $(OBJ_TEST_CPP_1_DLL_RELEASE) \
 $(OBJ_TEST_CPP_1_MT_RELEASE) \
 $(OBJ_TEST_CPP_1_ST_DEBUG) \
 $(OBJ_TEST_CPP_1_ST_RELEASE) \
 \

LIB_B64_H			=	$(PROJ_INCLUDE_DIR)\b64\b64.h
LIB_B64_H_IMPL_LNK	=	$(PROJ_INCLUDE_DIR)\b64\implicit_link.h
LIB_B64_HPP			=	$(PROJ_INCLUDE_DIR)\b64\cpp\b64.hpp
LIB_B64_C			=	$(PROJ_SRC_DIR)\b64.c

SRC_TEST_C_1				=	$(PROJ_TEST_DIR)\c\test.c.1\test.c.1.c
SRC_TEST_CPP_1				=	$(PROJ_TEST_DIR)\cpp\test.cpp.1\test.cpp.1.cpp


all:	target

usage:
	@echo "make [usage | clean | all | test | target] - default is 'all'"

clean:
	@-$(RM) $(TARGET_LIB_MT_DEBUG)
	@-$(RM) $(TARGET_LIB_UN_MT_DEBUG)
	@-$(RM) $(TARGET_LIB_DLL_DEBUG)
	@-$(RM) $(TARGET_LIB_UN_DLL_DEBUG)
	@-$(RM) $(TARGET_LIB_DLL_RELEASE)
	@-$(RM) $(TARGET_LIB_UN_DLL_RELEASE)
	@-$(RM) $(TARGET_LIB_MT_RELEASE)
	@-$(RM) $(TARGET_LIB_UN_MT_RELEASE)
	@-$(RM) $(TARGET_LIB_ST_DEBUG)
	@-$(RM) $(TARGET_LIB_UN_ST_DEBUG)
	@-$(RM) $(TARGET_LIB_ST_RELEASE)
	@-$(RM) $(TARGET_LIB_UN_ST_RELEASE)
	@-$(RM) $(TARGET_TEST_C_1_MT_DEBUG)
	@-$(RM) $(TARGET_TEST_C_1_DLL_DEBUG)
	@-$(RM) $(TARGET_TEST_C_1_DLL_RELEASE)
	@-$(RM) $(TARGET_TEST_C_1_MT_RELEASE)
	@-$(RM) $(TARGET_TEST_C_1_ST_DEBUG)
	@-$(RM) $(TARGET_TEST_C_1_ST_RELEASE)
	@-$(RM) $(TARGET_TEST_CPP_1_MT_DEBUG)
	@-$(RM) $(TARGET_TEST_CPP_1_DLL_DEBUG)
	@-$(RM) $(TARGET_TEST_CPP_1_DLL_RELEASE)
	@-$(RM) $(TARGET_TEST_CPP_1_MT_RELEASE)
	@-$(RM) $(TARGET_TEST_CPP_1_ST_DEBUG)
	@-$(RM) $(TARGET_TEST_CPP_1_ST_RELEASE)
	@-$(RM) $(TARGET_EXAMPLE_C_1_MT_DEBUG)
	@-$(RM) $(TARGET_EXAMPLE_C_2_MT_DEBUG)
	@-$(RM) $(TARGET_EXAMPLE_C_1_DLL_DEBUG)
	@-$(RM) $(TARGET_EXAMPLE_C_2_DLL_DEBUG)
	@-$(RM) $(TARGET_EXAMPLE_C_1_DLL_RELEASE)
	@-$(RM) $(TARGET_EXAMPLE_C_2_DLL_RELEASE)
	@-$(RM) $(TARGET_EXAMPLE_C_1_MT_RELEASE)
	@-$(RM) $(TARGET_EXAMPLE_C_2_MT_RELEASE)
	@-$(RM) $(TARGET_EXAMPLE_C_1_ST_DEBUG)
	@-$(RM) $(TARGET_EXAMPLE_C_2_ST_DEBUG)
	@-$(RM) $(TARGET_EXAMPLE_C_1_ST_RELEASE)
	@-$(RM) $(TARGET_EXAMPLE_C_2_ST_RELEASE)
	@-$(RM) $(TARGET_EXAMPLE_CPP_1_MT_DEBUG)
	@-$(RM) $(TARGET_EXAMPLE_CPP_2_MT_DEBUG)
	@-$(RM) $(TARGET_EXAMPLE_CPP_1_DLL_DEBUG)
	@-$(RM) $(TARGET_EXAMPLE_CPP_2_DLL_DEBUG)
	@-$(RM) $(TARGET_EXAMPLE_CPP_1_DLL_RELEASE)
	@-$(RM) $(TARGET_EXAMPLE_CPP_2_DLL_RELEASE)
	@-$(RM) $(TARGET_EXAMPLE_CPP_1_MT_RELEASE)
	@-$(RM) $(TARGET_EXAMPLE_CPP_2_MT_RELEASE)
	@-$(RM) $(TARGET_EXAMPLE_CPP_1_ST_DEBUG)
	@-$(RM) $(TARGET_EXAMPLE_CPP_2_ST_DEBUG)
	@-$(RM) $(TARGET_EXAMPLE_CPP_1_ST_RELEASE)
	@-$(RM) $(TARGET_EXAMPLE_CPP_2_ST_RELEASE)
	@-$(RM) $(OBJ_PROJ_MT_DEBUG)
	@-$(RM) $(OBJ_PROJ_DLL_DEBUG)
	@-$(RM) $(OBJ_PROJ_DLL_RELEASE)
	@-$(RM) $(OBJ_PROJ_MT_RELEASE)
	@-$(RM) $(OBJ_PROJ_ST_DEBUG)
	@-$(RM) $(OBJ_PROJ_ST_RELEASE)
	@-$(RM) $(OBJ_TEST_C_1_MT_DEBUG)
	@-$(RM) $(OBJ_TEST_C_1_DLL_DEBUG)
	@-$(RM) $(OBJ_TEST_C_1_DLL_RELEASE)
	@-$(RM) $(OBJ_TEST_C_1_MT_RELEASE)
	@-$(RM) $(OBJ_TEST_C_1_ST_DEBUG)
	@-$(RM) $(OBJ_TEST_C_1_ST_RELEASE)
	@-$(RM) $(OBJ_TEST_CPP_1_MT_DEBUG)
	@-$(RM) $(OBJ_TEST_CPP_1_DLL_DEBUG)
	@-$(RM) $(OBJ_TEST_CPP_1_DLL_RELEASE)
	@-$(RM) $(OBJ_TEST_CPP_1_MT_RELEASE)
	@-$(RM) $(OBJ_TEST_CPP_1_ST_DEBUG)
	@-$(RM) $(OBJ_TEST_CPP_1_ST_RELEASE)

#	@-if exist *.err del /f *.err
#	@-if exist *.exe del /f *.exe
#	@-if exist *.map del /f *.map
#	@-if exist *.obj del /f *.obj
#	@-if exist *.tds del /f *.tds

target:		$(TARGETS)

test_:
	$(TARGET_TEST_C_1_MT_DEBUG) --unittest
	$(TARGET_TEST_C_1_DLL_DEBUG) --unittest
	$(TARGET_TEST_C_1_DLL_RELEASE) --unittest
	$(TARGET_TEST_C_1_MT_RELEASE) --unittest
	$(TARGET_TEST_C_1_ST_DEBUG) --unittest
	$(TARGET_TEST_C_1_ST_RELEASE) --unittest
	$(TARGET_TEST_CPP_1_MT_DEBUG) --unittest
	$(TARGET_TEST_CPP_1_DLL_DEBUG) --unittest
	$(TARGET_TEST_CPP_1_DLL_RELEASE) --unittest
	$(TARGET_TEST_CPP_1_MT_RELEASE) --unittest
	$(TARGET_TEST_CPP_1_ST_DEBUG) --unittest
	$(TARGET_TEST_CPP_1_ST_RELEASE) --unittest

test:	target test_

# build targets

# library


$(TARGET_LIB_UN_MT_DEBUG): $(TARGET_LIB_MT_DEBUG)
	@$(CP) $(TARGET_LIB_MT_DEBUG) $@

$(TARGET_LIB_MT_DEBUG): $(OBJ_PROJ_MT_DEBUG) makefile.win32
	@-if not exist $(PROJ_LIB_DIR)\NUL mkdir $(PROJ_LIB_DIR)
	$(AR) $(AR_ARGS) -out:$@ $(OBJ_PROJ_MT_DEBUG)


$(OBJ_PROJ_MT_DEBUG):	$(LIB_B64_C) $(LIB_B64_H) makefile.win32
	$(CC) $(CC_ARGS_MT_DEBUG) -Fo$@ $(LIB_B64_C)


$(TARGET_LIB_UN_DLL_DEBUG): $(TARGET_LIB_DLL_DEBUG)
	@$(CP) $(TARGET_LIB_DLL_DEBUG) $@

$(TARGET_LIB_DLL_DEBUG): $(OBJ_PROJ_DLL_DEBUG) makefile.win32
	@-if not exist $(PROJ_LIB_DIR)\NUL mkdir $(PROJ_LIB_DIR)
	$(AR) $(AR_ARGS) -out:$@ $(OBJ_PROJ_DLL_DEBUG)


$(OBJ_PROJ_DLL_DEBUG):	$(LIB_B64_C) $(LIB_B64_H) makefile.win32
	$(CC) $(CC_ARGS_DLL_DEBUG) -Fo$@ $(LIB_B64_C)


$(TARGET_LIB_UN_DLL_RELEASE): $(TARGET_LIB_DLL_RELEASE)
	@$(CP) $(TARGET_LIB_DLL_RELEASE) $@

$(TARGET_LIB_DLL_RELEASE): $(OBJ_PROJ_DLL_RELEASE) makefile.win32
	@-if not exist $(PROJ_LIB_DIR)\NUL mkdir $(PROJ_LIB_DIR)
	$(AR) $(AR_ARGS) -out:$@ $(OBJ_PROJ_DLL_RELEASE)


$(OBJ_PROJ_DLL_RELEASE):	$(LIB_B64_C) $(LIB_B64_H) makefile.win32
	$(CC) $(CC_ARGS_DLL_RELEASE) -Fo$@ $(LIB_B64_C)


$(TARGET_LIB_UN_MT_RELEASE): $(TARGET_LIB_MT_RELEASE)
	@$(CP) $(TARGET_LIB_MT_RELEASE) $@

$(TARGET_LIB_MT_RELEASE): $(OBJ_PROJ_MT_RELEASE) makefile.win32
	@-if not exist $(PROJ_LIB_DIR)\NUL mkdir $(PROJ_LIB_DIR)
	$(AR) $(AR_ARGS) -out:$@ $(OBJ_PROJ_MT_RELEASE)


$(OBJ_PROJ_MT_RELEASE):	$(LIB_B64_C) $(LIB_B64_H) makefile.win32
	$(CC) $(CC_ARGS_MT_RELEASE) -Fo$@ $(LIB_B64_C)


$(TARGET_LIB_UN_ST_DEBUG): $(TARGET_LIB_ST_DEBUG)
	@$(CP) $(TARGET_LIB_ST_DEBUG) $@

$(TARGET_LIB_ST_DEBUG): $(OBJ_PROJ_ST_DEBUG) makefile.win32
	@-if not exist $(PROJ_LIB_DIR)\NUL mkdir $(PROJ_LIB_DIR)
	$(AR) $(AR_ARGS) -out:$@ $(OBJ_PROJ_ST_DEBUG)


$(OBJ_PROJ_ST_DEBUG):	$(LIB_B64_C) $(LIB_B64_H) makefile.win32
	$(CC) $(CC_ARGS_ST_DEBUG) -Fo$@ $(LIB_B64_C)


$(TARGET_LIB_UN_ST_RELEASE): $(TARGET_LIB_ST_RELEASE)
	@$(CP) $(TARGET_LIB_ST_RELEASE) $@

$(TARGET_LIB_ST_RELEASE): $(OBJ_PROJ_ST_RELEASE) makefile.win32
	@-if not exist $(PROJ_LIB_DIR)\NUL mkdir $(PROJ_LIB_DIR)
	$(AR) $(AR_ARGS) -out:$@ $(OBJ_PROJ_ST_RELEASE)


$(OBJ_PROJ_ST_RELEASE):	$(LIB_B64_C) $(LIB_B64_H) makefile.win32
	$(CC) $(CC_ARGS_ST_RELEASE) -Fo$@ $(LIB_B64_C)


	
# C test client

$(TARGET_TEST_C_1_MT_DEBUG):	$(OBJ_TEST_C_1_MT_DEBUG) makefile.win32
	@-if not exist $(PROJ_BIN_DIR)\NUL mkdir $(PROJ_BIN_DIR)
	$(LD) $(LD_ARGS) -out:$@ $(OBJ_TEST_C_1_MT_DEBUG) $(TARGET_LIB_MT_DEBUG)


$(OBJ_TEST_C_1_MT_DEBUG):	$(SRC_TEST_C_1) $(LIB_B64_H) makefile.win32
	$(CC) $(CC_ARGS_MT_DEBUG) -Fo$@ $(SRC_TEST_C_1)

$(TARGET_TEST_C_1_DLL_DEBUG):	$(OBJ_TEST_C_1_DLL_DEBUG) makefile.win32
	@-if not exist $(PROJ_BIN_DIR)\NUL mkdir $(PROJ_BIN_DIR)
	$(LD) $(LD_ARGS) -out:$@ $(OBJ_TEST_C_1_DLL_DEBUG) $(TARGET_LIB_DLL_DEBUG)


$(OBJ_TEST_C_1_DLL_DEBUG):	$(SRC_TEST_C_1) $(LIB_B64_H) makefile.win32
	$(CC) $(CC_ARGS_DLL_DEBUG) -Fo$@ $(SRC_TEST_C_1)

$(TARGET_TEST_C_1_DLL_RELEASE):	$(OBJ_TEST_C_1_DLL_RELEASE) makefile.win32
	@-if not exist $(PROJ_BIN_DIR)\NUL mkdir $(PROJ_BIN_DIR)
	$(LD) $(LD_ARGS) -out:$@ $(OBJ_TEST_C_1_DLL_RELEASE) $(TARGET_LIB_DLL_RELEASE)


$(OBJ_TEST_C_1_DLL_RELEASE):	$(SRC_TEST_C_1) $(LIB_B64_H) makefile.win32
	$(CC) $(CC_ARGS_DLL_RELEASE) -Fo$@ $(SRC_TEST_C_1)

$(TARGET_TEST_C_1_MT_RELEASE):	$(OBJ_TEST_C_1_MT_RELEASE) makefile.win32
	@-if not exist $(PROJ_BIN_DIR)\NUL mkdir $(PROJ_BIN_DIR)
	$(LD) $(LD_ARGS) -out:$@ $(OBJ_TEST_C_1_MT_RELEASE) $(TARGET_LIB_MT_RELEASE)


$(OBJ_TEST_C_1_MT_RELEASE):	$(SRC_TEST_C_1) $(LIB_B64_H) makefile.win32
	$(CC) $(CC_ARGS_MT_RELEASE) -Fo$@ $(SRC_TEST_C_1)

$(TARGET_TEST_C_1_ST_DEBUG):	$(OBJ_TEST_C_1_ST_DEBUG) makefile.win32
	@-if not exist $(PROJ_BIN_DIR)\NUL mkdir $(PROJ_BIN_DIR)
	$(LD) $(LD_ARGS) -out:$@ $(OBJ_TEST_C_1_ST_DEBUG) $(TARGET_LIB_ST_DEBUG)


$(OBJ_TEST_C_1_ST_DEBUG):	$(SRC_TEST_C_1) $(LIB_B64_H) makefile.win32
	$(CC) $(CC_ARGS_ST_DEBUG) -Fo$@ $(SRC_TEST_C_1)

$(TARGET_TEST_C_1_ST_RELEASE):	$(OBJ_TEST_C_1_ST_RELEASE) makefile.win32
	@-if not exist $(PROJ_BIN_DIR)\NUL mkdir $(PROJ_BIN_DIR)
	$(LD) $(LD_ARGS) -out:$@ $(OBJ_TEST_C_1_ST_RELEASE) $(TARGET_LIB_ST_RELEASE)


$(OBJ_TEST_C_1_ST_RELEASE):	$(SRC_TEST_C_1) $(LIB_B64_H) makefile.win32
	$(CC) $(CC_ARGS_ST_RELEASE) -Fo$@ $(SRC_TEST_C_1)



# C++ test client

$(TARGET_TEST_CPP_1_MT_DEBUG):	$(OBJ_TEST_CPP_1_MT_DEBUG) makefile.win32
	@-if not exist $(PROJ_BIN_DIR)\NUL mkdir $(PROJ_BIN_DIR)
	$(LD) $(LD_ARGS) -out:$@ $(OBJ_TEST_CPP_1_MT_DEBUG) $(TARGET_LIB_MT_DEBUG)

$(OBJ_TEST_CPP_1_MT_DEBUG):	$(SRC_TEST_CPP_1) $(LIB_B64_H) $(LIB_B64_HPP) makefile.win32
	$(CPPC) $(CPPC_ARGS_MT_DEBUG) -Fo$@ $(SRC_TEST_CPP_1)
$(TARGET_TEST_CPP_1_DLL_DEBUG):	$(OBJ_TEST_CPP_1_DLL_DEBUG) makefile.win32
	@-if not exist $(PROJ_BIN_DIR)\NUL mkdir $(PROJ_BIN_DIR)
	$(LD) $(LD_ARGS) -out:$@ $(OBJ_TEST_CPP_1_DLL_DEBUG) $(TARGET_LIB_DLL_DEBUG)

$(OBJ_TEST_CPP_1_DLL_DEBUG):	$(SRC_TEST_CPP_1) $(LIB_B64_H) $(LIB_B64_HPP) makefile.win32
	$(CPPC) $(CPPC_ARGS_DLL_DEBUG) -Fo$@ $(SRC_TEST_CPP_1)
$(TARGET_TEST_CPP_1_DLL_RELEASE):	$(OBJ_TEST_CPP_1_DLL_RELEASE) makefile.win32
	@-if not exist $(PROJ_BIN_DIR)\NUL mkdir $(PROJ_BIN_DIR)
	$(LD) $(LD_ARGS) -out:$@ $(OBJ_TEST_CPP_1_DLL_RELEASE) $(TARGET_LIB_DLL_RELEASE)

$(OBJ_TEST_CPP_1_DLL_RELEASE):	$(SRC_TEST_CPP_1) $(LIB_B64_H) $(LIB_B64_HPP) makefile.win32
	$(CPPC) $(CPPC_ARGS_DLL_RELEASE) -Fo$@ $(SRC_TEST_CPP_1)
$(TARGET_TEST_CPP_1_MT_RELEASE):	$(OBJ_TEST_CPP_1_MT_RELEASE) makefile.win32
	@-if not exist $(PROJ_BIN_DIR)\NUL mkdir $(PROJ_BIN_DIR)
	$(LD) $(LD_ARGS) -out:$@ $(OBJ_TEST_CPP_1_MT_RELEASE) $(TARGET_LIB_MT_RELEASE)

$(OBJ_TEST_CPP_1_MT_RELEASE):	$(SRC_TEST_CPP_1) $(LIB_B64_H) $(LIB_B64_HPP) makefile.win32
	$(CPPC) $(CPPC_ARGS_MT_RELEASE) -Fo$@ $(SRC_TEST_CPP_1)
$(TARGET_TEST_CPP_1_ST_DEBUG):	$(OBJ_TEST_CPP_1_ST_DEBUG) makefile.win32
	@-if not exist $(PROJ_BIN_DIR)\NUL mkdir $(PROJ_BIN_DIR)
	$(LD) $(LD_ARGS) -out:$@ $(OBJ_TEST_CPP_1_ST_DEBUG) $(TARGET_LIB_ST_DEBUG)

$(OBJ_TEST_CPP_1_ST_DEBUG):	$(SRC_TEST_CPP_1) $(LIB_B64_H) $(LIB_B64_HPP) makefile.win32
	$(CPPC) $(CPPC_ARGS_ST_DEBUG) -Fo$@ $(SRC_TEST_CPP_1)
$(TARGET_TEST_CPP_1_ST_RELEASE):	$(OBJ_TEST_CPP_1_ST_RELEASE) makefile.win32
	@-if not exist $(PROJ_BIN_DIR)\NUL mkdir $(PROJ_BIN_DIR)
	$(LD) $(LD_ARGS) -out:$@ $(OBJ_TEST_CPP_1_ST_RELEASE) $(TARGET_LIB_ST_RELEASE)

$(OBJ_TEST_CPP_1_ST_RELEASE):	$(SRC_TEST_CPP_1) $(LIB_B64_H) $(LIB_B64_HPP) makefile.win32
	$(CPPC) $(CPPC_ARGS_ST_RELEASE) -Fo$@ $(SRC_TEST_CPP_1)

################################################################################
